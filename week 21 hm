# #numbersplit
# number_split = str(input("Please enter your number:   "))
#
# NO = ""
# zeeros_end = len(number_split) - 1
# for i in number_split:
#     if i == "0":
#         zeeros_end -= 1
#         continue
#
#     final = (i + str(zeeros_end * str(0))) + "+"
#     zeeros_end -= 1
#     NO += final
# print(NO[0:-1])

path = "data/my_file.txt"
print('''question 1:''')
with open(path,'r') as question_4_file:
    data_my_file = [str(i).replace("\n",'') for i in list(question_4_file)]
def question_find_word(word):
    x = len(data_my_file)
    for i in data_my_file:
        if (i.lower()).find(word.lower())==-1:
            x-=1
    return (f'{len(data_my_file)-x} lines do not contain the word {word}')
print(question_find_word('case insensitive'))
print('''  
''')
print('''question 2:''')
def display_words():
    words_that_work = ""
    for i in data_my_file:
        l3 = i.split()
        for j in l3:
            if len(j)<4:
                words_that_work += f'{j} '
    return f'''Here are all of the words that have less than 4 characters.
"{words_that_work.strip()}"'''
print(display_words())


print('''  

''')

print('''question 3:''')
def minmax(n):
    x = ""
    min_fffin = ""
    max_ffffin = ""
    final_min = []
    final_max = []
    for i in str(n):
        if i==str(0):
           x += i
    l3_max = sorted([int(i) for i in str(n) if i!='0'])
    for i in l3_max:
        final_min.append(str(i))
        final_max.append(str(i))
    final_min.append(x)
    final_max.append(x)
    for x,y in zip(final_min,final_max):
        min_fffin+=str(x)
        max_ffffin+=str(y)
    return (f'The maximum value is {max_ffffin} and the minimum value is {min_fffin}')
print(minmax(4000))
print(minmax(74290))
print('''  


''')
print('''question 4 and 5:''')
polybius_info_horizontal = {1:('A','B','C','D','E'),2:('F','G','H','I','K'),3:('L','M','N','O','P'),4:('Q','R','S','T','U'),5:('V','W','X','Y','Z')}
def polybius_decipher(n):
    x = n
    x = x.replace(" ","")
    if str(n).isalpha():
        l3 = [i.upper() for i in n if i.isalpha()]
        y = []
        final = ""
        for i in l3:
            if i=='J':
                i='I'
            y.clear()
            for v_horizon in polybius_info_horizontal:
                y.append(str(polybius_info_horizontal.get(v_horizon).__contains__(i)))
                if polybius_info_horizontal.get(v_horizon).__contains__(i):
                    final += str(v_horizon)
                    y.append(v_horizon)
                    break
            bruh = y[-1]
            x = list(polybius_info_horizontal.get(bruh)).index(i)+1
            final += f'{x} '
        return f'The word "{n}" has been encrypted to "{final.strip()}"'
    elif x.isnumeric():
        n.strip()
        l3 = [n[i:i + 2].strip() for i in range(0, len(n) + 1, 2)]
        final = ""
        count = 0
        for i in l3:
            if i == "":
                final += " "
                continue
            l4 = [j for j in str(i)]
            for val_polybius in polybius_info_horizontal:
                if str(l4[0]) == str(val_polybius):
                    final += list(polybius_info_horizontal.get(val_polybius))[int(l4[1]) - 1]
        return f'The code "{n}" has been decoded to "{final.strip()}"'
print(polybius_decipher('HI'))
print(polybius_decipher('2324  4423154215'))
