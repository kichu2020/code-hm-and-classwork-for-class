import re
from functools import reduce
import random

prob_3_path = 'data/prob_3_random_stuff.txt'
all_phones = 'data/phone_numbers.txt'
uk_path = 'data/phone_numbers_uk.txt'
us_path = 'data/phone_numbers_us.txt'
def question_1():
    with open(all_phones,'r') as phone_info:
        l3 = str([i for i in phone_info])[1:-1]
    with open(us_path,'w') as us_phone:
        us_phone.write('\n'.join(re.compile(r'\d\d\d-\d\d\d-\d\d\d\d').findall(l3)))
    with open(uk_path,'w') as uk_phone:
        uk_phone.write('\n'.join(re.compile(r'\d\d\d\d\d-\d\d\d\d\d\d').findall(l3)))
    print("All phone numbers organized!")
# question_1()


def us_phone_check_ques_2_part(number):
    x = str(number).split('-')
    y = [len(i) for i in x]
    if y==[3,3,4]:
        with open(us_path, 'a') as us_phone:
            us_phone.write(f'{number}\n')
    elif y == [5,6]:
        with open(uk_path, 'a') as uk_phone:
            uk_phone.write(f'{number}\n')
def question_2():
    with open(all_phones,'r') as phone_info:
        l4 = [i[:-1] for i in phone_info]
    for i in l4:
        if i.__contains__(' ')==False:
            us_phone_check_ques_2_part(i)
    print("writen")
# question_2()


def create_random_in_file_part_ques_3():
    with open(prob_3_path,'w') as prob_3_file:
        l3 = []
        number_of_bytes = 250
        y = [chr(i).lower() for i in range(65, 91)] + [chr(i).upper() for i in range(65, 91)] + [str(i) for i in range(11)]
        while number_of_bytes>=0:
            stuff = "".join(random.sample(y,random.randint(5,15)))
            prob_3_file.write(f'{stuff}\n')
            number_of_bytes-=len(stuff)
# create_random_in_file_part_ques_3()

y = map(lambda x: [i for i in x],["Cherry", "Banana", "Apple"])
# print(list(y))




with open(prob_3_path, 'r') as prob_3_file:
    l312 = [i for i in prob_3_file]
l9 = []
def prob_3(n):
    l4 = []
    f = ""
    for i in n:
        if i.isnumeric():
            f+=i
        elif i.isalnum():
            l4.append(f)
            f=""
    l4.append(f)
    y = [len(i) for i in l4]
    l9.append(l4[y.index(max(y))])
y = list(map(prob_3,l312))
print(f'The largest chain is {l9[[len(i) for i in l9].index(max([len(i) for i in l9]))]}')


wegbf7824 = []
def prob_3_re(num):
    try:
        pattern = re.compile(r'\d')
        matches = pattern.finditer(num)
        l3 = [match.span() for match in matches]
        r = []
        count = []
        for z, y in zip(l3, l3[1:]):
            if y[1] == z[1] + 1:
                count.append(z)
                count.append(y)
            else:
                count = sorted(set(count))
                r.append(str(count)[1:-1])
                count.clear()
        r.append(str(count)[1:-1])
        l4 = max(r).split('), (')
        l4[-1]=l4[-1][:-1]
        l4[0] = l4[0][1:]
        wegbf7824.append(num[int(l4[0].split(',')[1].strip()) - 1:int(l4[-1].split(',')[1].strip())])
    except IndexError:
        wegbf7824.append('0')
prob_3_re('04853tXRqs')
d = list(map(prob_3_re,l312))
print(f'The largest chain is {max(wegbf7824)}')
